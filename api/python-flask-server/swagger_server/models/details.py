# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Details(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, price: float=None, bed: int=None, bath: int=None, area: int=None, year: int=None, school: int=None, parking: int=None):  # noqa: E501
        """Details - a model defined in Swagger

        :param price: The price of this Details.  # noqa: E501
        :type price: float
        :param bed: The bed of this Details.  # noqa: E501
        :type bed: int
        :param bath: The bath of this Details.  # noqa: E501
        :type bath: int
        :param area: The area of this Details.  # noqa: E501
        :type area: int
        :param year: The year of this Details.  # noqa: E501
        :type year: int
        :param school: The school of this Details.  # noqa: E501
        :type school: int
        :param parking: The parking of this Details.  # noqa: E501
        :type parking: int
        """
        self.swagger_types = {
            'price': float,
            'bed': int,
            'bath': int,
            'area': int,
            'year': int,
            'school': int,
            'parking': int
        }

        self.attribute_map = {
            'price': 'price',
            'bed': 'bed',
            'bath': 'bath',
            'area': 'area',
            'year': 'year',
            'school': 'school',
            'parking': 'parking'
        }

        self._price = price
        self._bed = bed
        self._bath = bath
        self._area = area
        self._year = year
        self._school = school
        self._parking = parking

    @classmethod
    def from_dict(cls, dikt) -> 'Details':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Details of this Details.  # noqa: E501
        :rtype: Details
        """
        return util.deserialize_model(dikt, cls)

    @property
    def price(self) -> float:
        """Gets the price of this Details.


        :return: The price of this Details.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this Details.


        :param price: The price of this Details.
        :type price: float
        """

        self._price = price

    @property
    def bed(self) -> int:
        """Gets the bed of this Details.


        :return: The bed of this Details.
        :rtype: int
        """
        return self._bed

    @bed.setter
    def bed(self, bed: int):
        """Sets the bed of this Details.


        :param bed: The bed of this Details.
        :type bed: int
        """

        self._bed = bed

    @property
    def bath(self) -> int:
        """Gets the bath of this Details.


        :return: The bath of this Details.
        :rtype: int
        """
        return self._bath

    @bath.setter
    def bath(self, bath: int):
        """Sets the bath of this Details.


        :param bath: The bath of this Details.
        :type bath: int
        """

        self._bath = bath

    @property
    def area(self) -> int:
        """Gets the area of this Details.


        :return: The area of this Details.
        :rtype: int
        """
        return self._area

    @area.setter
    def area(self, area: int):
        """Sets the area of this Details.


        :param area: The area of this Details.
        :type area: int
        """

        self._area = area

    @property
    def year(self) -> int:
        """Gets the year of this Details.


        :return: The year of this Details.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year: int):
        """Sets the year of this Details.


        :param year: The year of this Details.
        :type year: int
        """

        self._year = year

    @property
    def school(self) -> int:
        """Gets the school of this Details.


        :return: The school of this Details.
        :rtype: int
        """
        return self._school

    @school.setter
    def school(self, school: int):
        """Sets the school of this Details.


        :param school: The school of this Details.
        :type school: int
        """

        self._school = school

    @property
    def parking(self) -> int:
        """Gets the parking of this Details.


        :return: The parking of this Details.
        :rtype: int
        """
        return self._parking

    @parking.setter
    def parking(self, parking: int):
        """Sets the parking of this Details.


        :param parking: The parking of this Details.
        :type parking: int
        """

        self._parking = parking
